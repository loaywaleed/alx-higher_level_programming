0-add_integer module


Importing the function from the module:
>>> add_integer = __import__("0-add_integer").add_integer

Testing for two positive integers:
>>> add_integer(1, 2)
3

Testing for float:s
>>> add_integer(2.0, 3.0)
5

Testing for only one value:
>>> add_integer(2)
100

Testing for float and int:
>>> add_integer(100.3, -2)
98

Testing wrong types:
>>> add_integer(4, "hello")
Traceback (most recent call last):
	...
TypeError: b must be an integer

>>> add_integer("School", 7)
Traceback (most recent call last):
	...
TypeError: a must be an integer

Testing for larger numbers:
>>> add_integer(float("inf"), 7)
Traceback (most recent call last):
	...
OverflowError: cannot convert float infinity to integer

>>> add_integer(5, float("inf"))
Traceback (most recent call last):
        ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float("-inf"), 7)
Traceback (most recent call last):
        ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float("NaN"), 7)
Traceback (most recent call last):
	...
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float("-inf"))
Traceback (most recent call last):
        ...
OverflowError: cannot convert float infinity to integer

>>> add_integer()
Traceback (most recent call last):
	...
TypeError: add_integer() missing 1 required positional argument: 'a'
